# Auto-generated using compose2nix v0.3.1.
{ pkgs, lib, ... }:

{
  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };

  # Enable container name DNS for non-default Podman networks.
  # https://github.com/NixOS/nixpkgs/issues/226365
  networking.firewall.interfaces."podman+".allowedUDPPorts = [ 53 ];

  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."gitea" = {
    image = "docker.io/gitea/gitea:1.23.4";
    environment = {
      "GITEA__database__DB_TYPE" = "postgres";
      "GITEA__database__HOST" = "db:5432";
      "GITEA__database__NAME" = "gitea";
      "GITEA__database__PASSWD" = "gitea";
      "GITEA__database__USER" = "gitea";
      "USER_GID" = "1000";
      "USER_UID" = "1000";
    };
    volumes = [
      "/etc/localtime:/etc/localtime:ro"
      "/mnt/one-t-ssd/gitea/data:/data:rw"
    ];
    ports = [ "100.113.25.38:3000:3000/tcp" "100.113.25.38:222:22/tcp" ];
    dependsOn = [ "gitea-pg" ];
    log-driver = "journald";
    extraOptions = [ "--network-alias=server" "--network=gitea_gitea" ];
  };
  systemd.services."podman-gitea" = {
    serviceConfig = { Restart = lib.mkOverride 90 "always"; };
    after = [ "podman-network-gitea_gitea.service" ];
    requires = [ "podman-network-gitea_gitea.service" ];
    partOf = [ "podman-compose-gitea-root.target" ];
    wantedBy = [ "podman-compose-gitea-root.target" ];
  };
  virtualisation.oci-containers.containers."gitea-pg" = {
    image = "docker.io/library/postgres:14";
    environment = {
      "POSTGRES_DB" = "gitea";
      "POSTGRES_PASSWORD" = "gitea";
      "POSTGRES_USER" = "gitea";
    };
    volumes = [ "/mnt/one-t-ssd/gitea/postgres:/var/lib/postgresql/data:rw" ];
    log-driver = "journald";
    extraOptions = [ "--network-alias=db" "--network=gitea_gitea" ];
  };
  systemd.services."podman-gitea-pg" = {
    serviceConfig = { Restart = lib.mkOverride 90 "always"; };
    after = [ "podman-network-gitea_gitea.service" ];
    requires = [ "podman-network-gitea_gitea.service" ];
    partOf = [ "podman-compose-gitea-root.target" ];
    wantedBy = [ "podman-compose-gitea-root.target" ];
  };

  # Networks
  systemd.services."podman-network-gitea_gitea" = {
    path = [ pkgs.podman ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f gitea_gitea";
    };
    script = ''
      podman network inspect gitea_gitea || podman network create gitea_gitea
    '';
    partOf = [ "podman-compose-gitea-root.target" ];
    wantedBy = [ "podman-compose-gitea-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-gitea-root" = {
    unitConfig = { Description = "Root target generated by compose2nix."; };
    wantedBy = [ "multi-user.target" ];
  };
}
